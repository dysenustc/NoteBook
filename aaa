视觉惯性里程计方案分析
目录
视觉与数学基础	2
视觉里程计	2
相机模型	2
运动估计	3
KF&EKF Filter	4
Kalman Filter	4
Extended Kalman Filter	4
李群与李代数	5
IMU 预积分	6
参考文献	9
VINS-Mono	10
视觉观测预处理：	11
视觉惯性标定融合（Visual-Inertial Alignment）	12
1、陀螺仪偏差标定	12
2、速度，重力矢量和度量尺度初始化	13
3、重力向量方向校正	14
非线性VINS估计器	14
参考文献：	16
OKVIS	17
视觉和IMU融合VIO的实现	17
重投影误差	18
IMU误差	18
特征检测与匹配（Keypoint Detection and Matching）	18
关键帧选取（Keyframe Selection）	19
关键帧边缘化	20
非线性优化中边缘化的数学基础	20
VIO中Marginalization的应用	20
参考文献：	22
VIORB	22
VIORB输入数据处理	22
VIORB与ORB主要区别	22
Tracking	22
Local Mapping	25
Loop closing	25
IMU初始化	26
陀螺仪偏差估计	26
尺度和重力近似	26
加速度偏差估计，且优化尺度和重力方向	26
速度估计	27
MSCKF	27
状态传播（Propagation）	28
图像处理	28
EKF更新	29
Measurement Model	29
EKF Update	30
参考文献：	30
ROVIO	31
多层特征块的处理	31
总结	32

视觉与数学基础
视觉里程计
相机模型
相机将三维图像中的坐标点（单位为米）映射到二维图像平面（单位为像素）的过程能够用一个几何模型进行描述，这个模型有很对种，其中最简单的称为针孔模型（Pin-Hole Model）。如下图所示：
 
图1 针孔模型
	我们可以得到空间点P和成像平面上点P’的相似关系。整理可得
X^'=f X/Z
Y^'=f Y/Z
从成像平面到像素坐标又可以表示如下：
{■(u=f_x  X/Z+c_x@v=f_y  X/Z+c_y )┤
整理成其次左边如下：
(■(u@v@1))=  1/Z (■(f_x&0&c_x@0&f_y&c_y@0&0&1))(■(X@Y@Z))
有了相机模型，我们可以对空间点和像素点进行变换，这构成了视觉SLAM中图像信息处理的主要通道。
 
图2 视觉观测流程
运动估计
正如我们可以描述世界坐标系下两个3D点的运动一样，根据视觉观测，我们可以计算出两个相机之间的运动。根据匹配方式：我们可以分成以下三种方式：
1、2D-2D：只根据两组像素位置估计运动，采用对极几何约束；
2、3D-2D：已知空间位置和投影位置估计运动，这是n点投影问题（PnP）；
3、3D-3D：已知两组空间位置估计运动，采用的迭代最近点（ICP）方法。
下面我们稍微展开叙述。
1、2D-2D 对极几何
以下图为例，我们希望求取两帧图像之间的运动，假设第一帧到第二帧的运动为R,t。两个相机中心分别为O1,O2，在I1中有一个特征点x1，对应着I2中的特征点x2，说明它们是同一个空间点在两个成像平面上的投影。几何意义上，O1,O2,P确定了一个平面，称为极平面。从代数角度描述如下：
■(x_1=KP@x_2=K(RP+t) )
去掉标定矩阵得：
y_1=K^(-1) x_1,y_2=K^(-1) x_2
y_2=Ry_1+t
两边叉乘t：
t^× y_2=t^× Ry_1+t^× t=t^× Ry_1
左乘y_2^T：
y_2^T (t^× y_2)=y_2^T t^× Ry_1=0
至此，我们得到了对极约束。
2、3D-2D PnP（Perspective-n-Point）
	如果两张图像中其中一张特征点的3D位置已知，那么最少只需3个点对就可以估计相机运动。特征点的3D位置可以由三角化或者深度相机得到。求解PnP问题的方法有很对，可以使用直接线性变换（DLT），也可以构造最小二乘采用BA来求解。
e=z-1/Z DK(Rp_w+t)
3、3D-3D ICP（Iterative Closest Point）
	ICP的求解可以使用SVD也可以构造优化问题求解。
e=q-(Rp+t)
KF&EKF Filter
Kalman Filter
我们通过线性高斯系统，分析卡尔曼滤波器的过程并推导出卡尔曼滤波器的形式，然后我们可以扩展到非线性系统，得到扩展卡尔曼滤波器。
对于线性高斯系统，基于一阶马尔科夫假设，即系统当前的状态只与上一状态有关，运动和观测方程可以写成线性方程的形式：
x_k=A_k x_(k-1)+ u_k+w_k
z_k=C_k x_k+v_k
对卡尔曼滤波的递推推导分成预测和更新两个部分，其中x ̌_k代表先验，x ̂_k代表后验。
已知：z_k，x ̂_(k-1)，P ̂_(k-1)，E(w_k 〖w_k〗^T )=Q_k，E(v_k 〖v_k〗^T )=R_k
预测：
x ̌_k=A_k x ̂_(k-1)+ u_k
P ̌_k=A_k P ̂_(k-1) 〖A_k〗^T+Q_k
更新：
x ̂_k=x ̌_k+K_k (z_k-C_k x ̌_k)
P ̂_k=(I-K_k C_k ) P ̌_k
K_k=P ̌_k 〖C_k〗^T 〖(C_k P ̌_k 〖C_k〗^T+R_k)〗^(-1)
从推导的过程来看，卡尔曼滤波是无偏最优估计，卡尔曼滤波方法将两种数据进行最优的融合，因此它对传感器融合具有天然的优势。
Extended Kalman Filter
卡尔曼滤波方法是针对线性高斯系统进行的递推推导，只适用于线性高斯系统，但是现实中我们的SLAM系统是非线性的，而一个高斯分布经过非线性变换之后也不再是高斯分布。我们希望将非线性的系统进行局部线性化近似成高斯系统，非高斯分布近似成高斯分布来进行求解后验估计，这就得到了扩展卡尔曼滤波。
非线性系统的运动方程和观测方程为：
x_k=f(x_(k-1),u_k )+w_k
z_k=h(x_k )+v_k
在x ̂_(k-1)，P ̂_(k-1)处进行线性化（一阶泰勒展开）
运动方程：
x_k≈f(x ̂_(k-1),u_k )+〖∂f/(∂x_(k-1) )|〗_(x ̂_(k-1) ) (x_(k-1)-x ̂_(k-1))+w_k
令F=〖∂f/(∂x_(k-1) )|〗_(x ̂_(k-1) )
预测阶段x_k先验为：
x ̌_k=f(x ̂_(k-1),u_k )
P ̌_k=FP ̂_(k-1) F^T+Q_k
观测方程：
z_k≈h(x ̌_k )+〖∂h/(∂x_k )|〗_(x ̌_k ) (x_k-x ̌_k)+v_k
令H=〖∂h/(∂x_k )|〗_(x ̌_k )
更新阶段：
x ̂_k=x ̌_k+K_k (z_k-h(x ̌_k ))
P ̂_k=(I-K_k H) P ̌_k
K_k=P ̌_k H^T 〖(HP ̌_k H^T+R_k)〗^(-1)
扩展卡尔曼滤波给出了在单次线性化近似下的最大后验估计


李群与李代数
群是一种集合加上一种运算的代数结构，G=(A,∙)，A表示运算，∙ 表示运算。特殊正交群SO(n)（旋转矩阵群） 和特殊欧式群SE(n) （n维欧式变换）是矩阵中常见的群。李群是指具有连续（光滑）性质的群。每个李群都有对应的李代数SLAM中主要涉及的是SO(3)，SE(3)。下图描述了SO(3)，SE(3)及其对应的李代数的转换关系。
 
图3 李群与李代数
IMU 预积分[1]
从IMU数据到六自由度的空间位姿，还隔着一个动力学方程。同时，IMU数据，除了受白噪声影响之外，通常认为还存在一个零偏。仅用IMU来做位姿估计，由于零偏的影响，很快就会漂移。然而，视觉图像在固定不动时，并不会产生漂移。所以，利用视觉确定IMU的零偏，同IMU来辅助快速运动的定位和纯旋转的处理，成为VIO的优势。
在时间轴上，IMU通常以较快的速率采集角速度和加速度的信息，而视觉则是以较慢的频率采集图像。VIO的器件同步，保证了每个时刻采集的数据都是同步的。原理上，我们可以给出每个时刻的位姿估计，然而，现有视觉SLAM，多数是基于关键帧+BA的处理形式。于是，一个重要的问题是，能否将两个视觉关键帧当中的IMU数据，整合在一起，约束它们之间的运动，如果可以的话，又如何来约束，预积分的目的，就在于处理这里的运动关系。
 
图4 IMU与视觉时间轴
对于世界坐标系下的VIO，我们有世界坐标系W，IMU坐标系B，相机坐标系C。相机Visual-only，我们通常还需要估计世界系到IMU系的位姿R_WB，P_WB
下图给了动力学方程。即位移的微分为速度、速度的微分为加速度、旋转的微分为角速度。
 
图5 VIO坐标系和动力学方程
那么通常的IMU测量数据时怎样的呢？实际上它可以测量IMU坐标系下的角速度和加速度，测量信号受噪声和零偏的影响。所以：
ω ̃_WB (t)= ω_WB (t)+ b^g (t)+ η^g (t)
a ̃(t)= R_WB^T (t)((_W^ )a(t)  - (_W^ )g)+ b^a (t)+ η^a (t)
为了估计位姿，首先要选择状态变量。在紧耦合（Tightly Coupled）方案中，通常选择位姿、速度、零偏这几个量，作为待估计的状态量，共15维：
X_i=[R_i，P_i，v_i，b_i ]，b_i (b_i^g,b_i^a)
因此，在带IMU的bundle adjustment中，我们每一个Pose都是这样一个15维的变量。那么，如何通过IMU数据，定义两个状态量之间的运动约束呢？还是回到动力学。
前面给出了微分形式的动力学，当然我们可以把它写成积分形式的。然后，由于是在离散时刻进行采样，所以得到的是离散时刻的动力学方程。再代入IMU的测量，有：
 
	于是，差分方程给出了两个连续的视觉帧之间的IMU约束。进一步，如果把两个关键帧之间的多个视觉帧积分起来，就形成了预积分：
 
 
	在预积分论文中，作者定义了两个关键帧之间的误差量：〖ΔR〗_ij，〖Δv〗_ij，〖Δp〗_ij。这几个量既可以同IMU测量数据表达，又可以根据两个关键帧的状态量表达，因此，我们可以定义观测与状态之间的残差，然后构建最小二乘问题求解。从而将IMU数据融合进了Visual-SLAM的框架。
	至此，我们分析了预积分的原理和目的。接下来的问题，我们要考虑，关键帧之间的运动约束受什么样的噪声影响，我们知道IMU测量数据受高斯噪声和随机游走的噪声影响，但是这里定义的观测量，是IMU测量量的复杂非线性组合，于是，我们只能通过泰勒展开，保留一阶项，实现对噪声的线性化
 
 
然后，还需讨论观测量对零偏的雅可比：
 
至此，除了细节推导之外，我们已经说明了预积分的主要思路。那么，如何在VIO里应用预积分呢？实际上也不难，只要把原先视觉SLAM里的bundle adjustment里，用15维的Pose代替原先6维的Pose，再加上IMU运动约束即可。
参考文献
[1] Forster C, Carlone L, Dellaert F, et al. IMU preintegration on manifold for efficient visual-inertial maximum-a-posteriori estimation[C]. Georgia Institute of Technology, 2015.
